package com.punit.sts.nova;

import com.punit.sts.nova.event.PromptStartEvent;
import com.punit.sts.nova.event.NovaSonicEvent;
import com.punit.sts.nova.observer.InteractObserver;
import com.fasterxml.jackson.databind.JsonNode;

import java.io.InputStream;

/**
 * Handles Nova Sonic events.
 */
public interface NovaS2SEventHandler {
    /**
     * Called when the session starts.
     */
    void onStart();
    /**
     * Handles a completionStart event.
     * @param node
     */
    void handleCompletionStart(JsonNode node);

    /**
     * Handles a contentStart event.
     * @param node
     */
    void handleContentStart(JsonNode node);

    /**
     * Handles a textOutput event.
     * @param node
     */
    void handleTextOutput(JsonNode node);

    /**
     * Handles an audioOutput event.
     * @param node
     */
    void handleAudioOutput(JsonNode node);

    /**
     * Handles a contentEnd event.
     * @param node
     */
    void handleContentEnd(JsonNode node);

    /**
     * Handles a completionEnd event.
     * @param node
     */
    void handleCompletionEnd(JsonNode node);

    /**
     * Handles a toolUse event.
     * @param node
     * @param toolUseId
     * @param toolName
     * @param content
     */
    void handleToolUse(JsonNode node, String toolUseId, String toolName, String content);

    /**
     * Called when an error occurs.
     * @param e
     */
    void onError(Exception e);

    /**
     * Called when the stream is complete.
     */
    void onComplete();

    /**
     * Sets the outbound observer.
     * @param outbound
     */
    void setOutbound(InteractObserver<NovaSonicEvent> outbound);

    /**
     * Retrieves the audio input stream generated by this event handler.
     * @return
     */
    InputStream getAudioInputStream();

    /**
     * Retrieves tool configuration.
     * @return
     */
    PromptStartEvent.ToolConfiguration getToolConfiguration();
}
